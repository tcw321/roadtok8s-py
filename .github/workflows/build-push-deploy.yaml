name: Compose - Build, Push & Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DH_USER: $glossterm::[ secrets.DOCKERHUB_USERNAME ]
      REPO: $glossterm::[ secrets.DOCKERHUB_REPO ]
      SSH_OPTS: '-o StrictHostKeyChecking=no'
      REMOTE: 'root@$glossterm::[ secrets.AKAMAI_INSTANCE_IP_ADDRESS ]'
      REMOTE_APP_DIR: '/opt/app'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: $glossterm::[ secrets.DOCKERHUB_USERNAME ]
        password: $glossterm::[ secrets.DOCKERHUB_TOKEN ]
    - name: Build the Docker image
      run: |
        docker build -f Dockerfile \
          -t "pass:[\(DH_USER/\)]REPO:latest" \
          -t "pass:[\(DH_USER/\)]REPO:$glossterm::[ github.sha ]" \
          .
    - name: Push the Docker image to Docker Hub
      run: |
        docker push "pass:[\(DH_USER/\)]REPO" --all-tags
    - name: Implement the Private SSH Key
      run: |
        mkdir -p ~/.ssh/
        echo "$glossterm::[ secrets.SSH_PRIVATE_KEY ]" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    - name: Ensure Docker and Docker Compose is installed on VM
      run: |
        ssh pass:[\(SSH_OPTS \)]REMOTE << EOF
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            rm get-docker.sh
            # install Docker Compose
            sudo apt-get update
            sudo apt-get install docker-compose-plugin
          fi
        EOF